FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
#pytorch/pytorch:0.4.1-cuda9-cudnn7-devel

# "pytorch:0.4.1-cuda9-cudnn7-devel" uses CUDA v9.0
# "nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04" uses CUDA v9.0
RUN nvcc --version

# "pytorch:0.4.1-cuda9-cudnn7-devel" uses cuDNN v7.1.4
# "nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04" uses cuDNN v7.6.4
RUN cat /usr/include/cudnn.h | grep CUDNN_MAJOR -A 2
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/extras/CUPTI/lib64


RUN apt-get update && apt-get install -y apt-utils

### Time Zone ###
ARG TZ=Asia/Kuala_Lumpur
ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y tzdata
RUN ln -fs /usr/share/zoneinfo/${TZ} /etc/localtime
RUN dpkg-reconfigure --frontend noninteractive tzdata

RUN apt-get update && apt-get install -y \
    wget nano curl ssh zip unzip \
    libxrender1 libxext6 software-properties-common protobuf-compiler \
    git

RUN apt-get update && apt-get install -y python-dev python-pip
RUN apt-get update && apt-get install -y \
    python-tk python-pil python-lxml \
    python-setuptools python-cryptography python-openssl \
    python-socks

RUN python -m pip install --upgrade pip
RUN python -m pip install --upgrade setuptools wheel

RUN python -m pip install --upgrade \
    tqdm requests pipreqs \
    h5py pandas typing \
    Cython scipy numpy matplotlib \
    scikit-image scikit-learn opencv-python \
    torch==0.4.1

RUN python -m pip install --upgrade \
    torchvision==0.2.2 torchtext==0.2.3 tensorboardX==1.2 pycocotools

### JAVA 8 ###
# Required to run SPICE metric
# Newer versions will raise warnings regarding "reflective access"
RUN apt-get update && apt-get install -y openjdk-8-jdk

### Clean-up ###
RUN apt-get clean

WORKDIR /master

CMD bash
